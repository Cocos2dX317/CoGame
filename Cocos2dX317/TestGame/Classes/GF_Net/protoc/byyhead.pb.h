// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: byyhead.proto

#ifndef PROTOBUF_byyhead_2eproto__INCLUDED
#define PROTOBUF_byyhead_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace byyhead {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_byyhead_2eproto();
void protobuf_AssignDesc_byyhead_2eproto();
void protobuf_ShutdownFile_byyhead_2eproto();

class CByyHead;
class CByyBody;

// ===================================================================

class CByyHead : public ::google::protobuf::Message {
 public:
  CByyHead();
  virtual ~CByyHead();

  CByyHead(const CByyHead& from);

  inline CByyHead& operator=(const CByyHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CByyHead& default_instance();

  void Swap(CByyHead* other);

  // implements Message ----------------------------------------------

  CByyHead* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CByyHead& from);
  void MergeFrom(const CByyHead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 main_ver = 1;
  inline bool has_main_ver() const;
  inline void clear_main_ver();
  static const int kMainVerFieldNumber = 1;
  inline ::google::protobuf::uint32 main_ver() const;
  inline void set_main_ver(::google::protobuf::uint32 value);

  // required uint32 sub_ver = 2;
  inline bool has_sub_ver() const;
  inline void clear_sub_ver();
  static const int kSubVerFieldNumber = 2;
  inline ::google::protobuf::uint32 sub_ver() const;
  inline void set_sub_ver(::google::protobuf::uint32 value);

  // required uint32 main_cmd = 3;
  inline bool has_main_cmd() const;
  inline void clear_main_cmd();
  static const int kMainCmdFieldNumber = 3;
  inline ::google::protobuf::uint32 main_cmd() const;
  inline void set_main_cmd(::google::protobuf::uint32 value);

  // required uint32 sub_cmd = 4;
  inline bool has_sub_cmd() const;
  inline void clear_sub_cmd();
  static const int kSubCmdFieldNumber = 4;
  inline ::google::protobuf::uint32 sub_cmd() const;
  inline void set_sub_cmd(::google::protobuf::uint32 value);

  // required uint32 sequence = 5;
  inline bool has_sequence() const;
  inline void clear_sequence();
  static const int kSequenceFieldNumber = 5;
  inline ::google::protobuf::uint32 sequence() const;
  inline void set_sequence(::google::protobuf::uint32 value);

  // required uint32 enc_type = 6;
  inline bool has_enc_type() const;
  inline void clear_enc_type();
  static const int kEncTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 enc_type() const;
  inline void set_enc_type(::google::protobuf::uint32 value);

  // required uint32 pro_type = 7;
  inline bool has_pro_type() const;
  inline void clear_pro_type();
  static const int kProTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 pro_type() const;
  inline void set_pro_type(::google::protobuf::uint32 value);

  // required uint32 from_uid = 8;
  inline bool has_from_uid() const;
  inline void clear_from_uid();
  static const int kFromUidFieldNumber = 8;
  inline ::google::protobuf::uint32 from_uid() const;
  inline void set_from_uid(::google::protobuf::uint32 value);

  // optional uint32 to_uid = 9;
  inline bool has_to_uid() const;
  inline void clear_to_uid();
  static const int kToUidFieldNumber = 9;
  inline ::google::protobuf::uint32 to_uid() const;
  inline void set_to_uid(::google::protobuf::uint32 value);

  // optional uint32 flow_id = 10;
  inline bool has_flow_id() const;
  inline void clear_flow_id();
  static const int kFlowIdFieldNumber = 10;
  inline ::google::protobuf::uint32 flow_id() const;
  inline void set_flow_id(::google::protobuf::uint32 value);

  // optional int32 err = 11;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 11;
  inline ::google::protobuf::int32 err() const;
  inline void set_err(::google::protobuf::int32 value);

  // optional int32 result = 12;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 12;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional string err_msg = 13;
  inline bool has_err_msg() const;
  inline void clear_err_msg();
  static const int kErrMsgFieldNumber = 13;
  inline const ::std::string& err_msg() const;
  inline void set_err_msg(const ::std::string& value);
  inline void set_err_msg(const char* value);
  inline void set_err_msg(const char* value, size_t size);
  inline ::std::string* mutable_err_msg();
  inline ::std::string* release_err_msg();
  inline void set_allocated_err_msg(::std::string* err_msg);

  // @@protoc_insertion_point(class_scope:byyhead.CByyHead)
 private:
  inline void set_has_main_ver();
  inline void clear_has_main_ver();
  inline void set_has_sub_ver();
  inline void clear_has_sub_ver();
  inline void set_has_main_cmd();
  inline void clear_has_main_cmd();
  inline void set_has_sub_cmd();
  inline void clear_has_sub_cmd();
  inline void set_has_sequence();
  inline void clear_has_sequence();
  inline void set_has_enc_type();
  inline void clear_has_enc_type();
  inline void set_has_pro_type();
  inline void clear_has_pro_type();
  inline void set_has_from_uid();
  inline void clear_has_from_uid();
  inline void set_has_to_uid();
  inline void clear_has_to_uid();
  inline void set_has_flow_id();
  inline void clear_has_flow_id();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_err_msg();
  inline void clear_has_err_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 main_ver_;
  ::google::protobuf::uint32 sub_ver_;
  ::google::protobuf::uint32 main_cmd_;
  ::google::protobuf::uint32 sub_cmd_;
  ::google::protobuf::uint32 sequence_;
  ::google::protobuf::uint32 enc_type_;
  ::google::protobuf::uint32 pro_type_;
  ::google::protobuf::uint32 from_uid_;
  ::google::protobuf::uint32 to_uid_;
  ::google::protobuf::uint32 flow_id_;
  ::google::protobuf::int32 err_;
  ::google::protobuf::int32 result_;
  ::std::string* err_msg_;
  friend void  protobuf_AddDesc_byyhead_2eproto();
  friend void protobuf_AssignDesc_byyhead_2eproto();
  friend void protobuf_ShutdownFile_byyhead_2eproto();

  void InitAsDefaultInstance();
  static CByyHead* default_instance_;
};
// -------------------------------------------------------------------

class CByyBody : public ::google::protobuf::Message {
 public:
  CByyBody();
  virtual ~CByyBody();

  CByyBody(const CByyBody& from);

  inline CByyBody& operator=(const CByyBody& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CByyBody& default_instance();

  void Swap(CByyBody* other);

  // implements Message ----------------------------------------------

  CByyBody* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CByyBody& from);
  void MergeFrom(const CByyBody& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:byyhead.CByyBody)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_byyhead_2eproto();
  friend void protobuf_AssignDesc_byyhead_2eproto();
  friend void protobuf_ShutdownFile_byyhead_2eproto();

  void InitAsDefaultInstance();
  static CByyBody* default_instance_;
};
// ===================================================================


// ===================================================================

// CByyHead

// required uint32 main_ver = 1;
inline bool CByyHead::has_main_ver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CByyHead::set_has_main_ver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CByyHead::clear_has_main_ver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CByyHead::clear_main_ver() {
  main_ver_ = 0u;
  clear_has_main_ver();
}
inline ::google::protobuf::uint32 CByyHead::main_ver() const {
  // @@protoc_insertion_point(field_get:byyhead.CByyHead.main_ver)
  return main_ver_;
}
inline void CByyHead::set_main_ver(::google::protobuf::uint32 value) {
  set_has_main_ver();
  main_ver_ = value;
  // @@protoc_insertion_point(field_set:byyhead.CByyHead.main_ver)
}

// required uint32 sub_ver = 2;
inline bool CByyHead::has_sub_ver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CByyHead::set_has_sub_ver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CByyHead::clear_has_sub_ver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CByyHead::clear_sub_ver() {
  sub_ver_ = 0u;
  clear_has_sub_ver();
}
inline ::google::protobuf::uint32 CByyHead::sub_ver() const {
  // @@protoc_insertion_point(field_get:byyhead.CByyHead.sub_ver)
  return sub_ver_;
}
inline void CByyHead::set_sub_ver(::google::protobuf::uint32 value) {
  set_has_sub_ver();
  sub_ver_ = value;
  // @@protoc_insertion_point(field_set:byyhead.CByyHead.sub_ver)
}

// required uint32 main_cmd = 3;
inline bool CByyHead::has_main_cmd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CByyHead::set_has_main_cmd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CByyHead::clear_has_main_cmd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CByyHead::clear_main_cmd() {
  main_cmd_ = 0u;
  clear_has_main_cmd();
}
inline ::google::protobuf::uint32 CByyHead::main_cmd() const {
  // @@protoc_insertion_point(field_get:byyhead.CByyHead.main_cmd)
  return main_cmd_;
}
inline void CByyHead::set_main_cmd(::google::protobuf::uint32 value) {
  set_has_main_cmd();
  main_cmd_ = value;
  // @@protoc_insertion_point(field_set:byyhead.CByyHead.main_cmd)
}

// required uint32 sub_cmd = 4;
inline bool CByyHead::has_sub_cmd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CByyHead::set_has_sub_cmd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CByyHead::clear_has_sub_cmd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CByyHead::clear_sub_cmd() {
  sub_cmd_ = 0u;
  clear_has_sub_cmd();
}
inline ::google::protobuf::uint32 CByyHead::sub_cmd() const {
  // @@protoc_insertion_point(field_get:byyhead.CByyHead.sub_cmd)
  return sub_cmd_;
}
inline void CByyHead::set_sub_cmd(::google::protobuf::uint32 value) {
  set_has_sub_cmd();
  sub_cmd_ = value;
  // @@protoc_insertion_point(field_set:byyhead.CByyHead.sub_cmd)
}

// required uint32 sequence = 5;
inline bool CByyHead::has_sequence() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CByyHead::set_has_sequence() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CByyHead::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CByyHead::clear_sequence() {
  sequence_ = 0u;
  clear_has_sequence();
}
inline ::google::protobuf::uint32 CByyHead::sequence() const {
  // @@protoc_insertion_point(field_get:byyhead.CByyHead.sequence)
  return sequence_;
}
inline void CByyHead::set_sequence(::google::protobuf::uint32 value) {
  set_has_sequence();
  sequence_ = value;
  // @@protoc_insertion_point(field_set:byyhead.CByyHead.sequence)
}

// required uint32 enc_type = 6;
inline bool CByyHead::has_enc_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CByyHead::set_has_enc_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CByyHead::clear_has_enc_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CByyHead::clear_enc_type() {
  enc_type_ = 0u;
  clear_has_enc_type();
}
inline ::google::protobuf::uint32 CByyHead::enc_type() const {
  // @@protoc_insertion_point(field_get:byyhead.CByyHead.enc_type)
  return enc_type_;
}
inline void CByyHead::set_enc_type(::google::protobuf::uint32 value) {
  set_has_enc_type();
  enc_type_ = value;
  // @@protoc_insertion_point(field_set:byyhead.CByyHead.enc_type)
}

// required uint32 pro_type = 7;
inline bool CByyHead::has_pro_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CByyHead::set_has_pro_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CByyHead::clear_has_pro_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CByyHead::clear_pro_type() {
  pro_type_ = 0u;
  clear_has_pro_type();
}
inline ::google::protobuf::uint32 CByyHead::pro_type() const {
  // @@protoc_insertion_point(field_get:byyhead.CByyHead.pro_type)
  return pro_type_;
}
inline void CByyHead::set_pro_type(::google::protobuf::uint32 value) {
  set_has_pro_type();
  pro_type_ = value;
  // @@protoc_insertion_point(field_set:byyhead.CByyHead.pro_type)
}

// required uint32 from_uid = 8;
inline bool CByyHead::has_from_uid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CByyHead::set_has_from_uid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CByyHead::clear_has_from_uid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CByyHead::clear_from_uid() {
  from_uid_ = 0u;
  clear_has_from_uid();
}
inline ::google::protobuf::uint32 CByyHead::from_uid() const {
  // @@protoc_insertion_point(field_get:byyhead.CByyHead.from_uid)
  return from_uid_;
}
inline void CByyHead::set_from_uid(::google::protobuf::uint32 value) {
  set_has_from_uid();
  from_uid_ = value;
  // @@protoc_insertion_point(field_set:byyhead.CByyHead.from_uid)
}

// optional uint32 to_uid = 9;
inline bool CByyHead::has_to_uid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CByyHead::set_has_to_uid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CByyHead::clear_has_to_uid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CByyHead::clear_to_uid() {
  to_uid_ = 0u;
  clear_has_to_uid();
}
inline ::google::protobuf::uint32 CByyHead::to_uid() const {
  // @@protoc_insertion_point(field_get:byyhead.CByyHead.to_uid)
  return to_uid_;
}
inline void CByyHead::set_to_uid(::google::protobuf::uint32 value) {
  set_has_to_uid();
  to_uid_ = value;
  // @@protoc_insertion_point(field_set:byyhead.CByyHead.to_uid)
}

// optional uint32 flow_id = 10;
inline bool CByyHead::has_flow_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CByyHead::set_has_flow_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CByyHead::clear_has_flow_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CByyHead::clear_flow_id() {
  flow_id_ = 0u;
  clear_has_flow_id();
}
inline ::google::protobuf::uint32 CByyHead::flow_id() const {
  // @@protoc_insertion_point(field_get:byyhead.CByyHead.flow_id)
  return flow_id_;
}
inline void CByyHead::set_flow_id(::google::protobuf::uint32 value) {
  set_has_flow_id();
  flow_id_ = value;
  // @@protoc_insertion_point(field_set:byyhead.CByyHead.flow_id)
}

// optional int32 err = 11;
inline bool CByyHead::has_err() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CByyHead::set_has_err() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CByyHead::clear_has_err() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CByyHead::clear_err() {
  err_ = 0;
  clear_has_err();
}
inline ::google::protobuf::int32 CByyHead::err() const {
  // @@protoc_insertion_point(field_get:byyhead.CByyHead.err)
  return err_;
}
inline void CByyHead::set_err(::google::protobuf::int32 value) {
  set_has_err();
  err_ = value;
  // @@protoc_insertion_point(field_set:byyhead.CByyHead.err)
}

// optional int32 result = 12;
inline bool CByyHead::has_result() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CByyHead::set_has_result() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CByyHead::clear_has_result() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CByyHead::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CByyHead::result() const {
  // @@protoc_insertion_point(field_get:byyhead.CByyHead.result)
  return result_;
}
inline void CByyHead::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:byyhead.CByyHead.result)
}

// optional string err_msg = 13;
inline bool CByyHead::has_err_msg() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CByyHead::set_has_err_msg() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CByyHead::clear_has_err_msg() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CByyHead::clear_err_msg() {
  if (err_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    err_msg_->clear();
  }
  clear_has_err_msg();
}
inline const ::std::string& CByyHead::err_msg() const {
  // @@protoc_insertion_point(field_get:byyhead.CByyHead.err_msg)
  return *err_msg_;
}
inline void CByyHead::set_err_msg(const ::std::string& value) {
  set_has_err_msg();
  if (err_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    err_msg_ = new ::std::string;
  }
  err_msg_->assign(value);
  // @@protoc_insertion_point(field_set:byyhead.CByyHead.err_msg)
}
inline void CByyHead::set_err_msg(const char* value) {
  set_has_err_msg();
  if (err_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    err_msg_ = new ::std::string;
  }
  err_msg_->assign(value);
  // @@protoc_insertion_point(field_set_char:byyhead.CByyHead.err_msg)
}
inline void CByyHead::set_err_msg(const char* value, size_t size) {
  set_has_err_msg();
  if (err_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    err_msg_ = new ::std::string;
  }
  err_msg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:byyhead.CByyHead.err_msg)
}
inline ::std::string* CByyHead::mutable_err_msg() {
  set_has_err_msg();
  if (err_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    err_msg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:byyhead.CByyHead.err_msg)
  return err_msg_;
}
inline ::std::string* CByyHead::release_err_msg() {
  clear_has_err_msg();
  if (err_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = err_msg_;
    err_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CByyHead::set_allocated_err_msg(::std::string* err_msg) {
  if (err_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete err_msg_;
  }
  if (err_msg) {
    set_has_err_msg();
    err_msg_ = err_msg;
  } else {
    clear_has_err_msg();
    err_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:byyhead.CByyHead.err_msg)
}

// -------------------------------------------------------------------

// CByyBody

// required bytes data = 1;
inline bool CByyBody::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CByyBody::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CByyBody::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CByyBody::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& CByyBody::data() const {
  // @@protoc_insertion_point(field_get:byyhead.CByyBody.data)
  return *data_;
}
inline void CByyBody::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:byyhead.CByyBody.data)
}
inline void CByyBody::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:byyhead.CByyBody.data)
}
inline void CByyBody::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:byyhead.CByyBody.data)
}
inline ::std::string* CByyBody::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:byyhead.CByyBody.data)
  return data_;
}
inline ::std::string* CByyBody::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CByyBody::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:byyhead.CByyBody.data)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace byyhead

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_byyhead_2eproto__INCLUDED
