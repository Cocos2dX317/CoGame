// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: byyhead.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "byyhead.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace byyhead {

namespace {

const ::google::protobuf::Descriptor* CByyHead_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CByyHead_reflection_ = NULL;
const ::google::protobuf::Descriptor* CByyBody_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CByyBody_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_byyhead_2eproto() {
  protobuf_AddDesc_byyhead_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "byyhead.proto");
  GOOGLE_CHECK(file != NULL);
  CByyHead_descriptor_ = file->message_type(0);
  static const int CByyHead_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CByyHead, main_ver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CByyHead, sub_ver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CByyHead, main_cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CByyHead, sub_cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CByyHead, sequence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CByyHead, enc_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CByyHead, pro_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CByyHead, from_uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CByyHead, to_uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CByyHead, flow_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CByyHead, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CByyHead, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CByyHead, err_msg_),
  };
  CByyHead_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CByyHead_descriptor_,
      CByyHead::default_instance_,
      CByyHead_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CByyHead, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CByyHead, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CByyHead));
  CByyBody_descriptor_ = file->message_type(1);
  static const int CByyBody_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CByyBody, data_),
  };
  CByyBody_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CByyBody_descriptor_,
      CByyBody::default_instance_,
      CByyBody_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CByyBody, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CByyBody, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CByyBody));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_byyhead_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CByyHead_descriptor_, &CByyHead::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CByyBody_descriptor_, &CByyBody::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_byyhead_2eproto() {
  delete CByyHead::default_instance_;
  delete CByyHead_reflection_;
  delete CByyBody::default_instance_;
  delete CByyBody_reflection_;
}

void protobuf_AddDesc_byyhead_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rbyyhead.proto\022\007byyhead\"\347\001\n\010CByyHead\022\020\n"
    "\010main_ver\030\001 \002(\r\022\017\n\007sub_ver\030\002 \002(\r\022\020\n\010main"
    "_cmd\030\003 \002(\r\022\017\n\007sub_cmd\030\004 \002(\r\022\020\n\010sequence\030"
    "\005 \002(\r\022\020\n\010enc_type\030\006 \002(\r\022\020\n\010pro_type\030\007 \002("
    "\r\022\020\n\010from_uid\030\010 \002(\r\022\016\n\006to_uid\030\t \001(\r\022\017\n\007f"
    "low_id\030\n \001(\r\022\013\n\003err\030\013 \001(\005\022\016\n\006result\030\014 \001("
    "\005\022\017\n\007err_msg\030\r \001(\t\"\030\n\010CByyBody\022\014\n\004data\030\001"
    " \002(\014", 284);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "byyhead.proto", &protobuf_RegisterTypes);
  CByyHead::default_instance_ = new CByyHead();
  CByyBody::default_instance_ = new CByyBody();
  CByyHead::default_instance_->InitAsDefaultInstance();
  CByyBody::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_byyhead_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_byyhead_2eproto {
  StaticDescriptorInitializer_byyhead_2eproto() {
    protobuf_AddDesc_byyhead_2eproto();
  }
} static_descriptor_initializer_byyhead_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int CByyHead::kMainVerFieldNumber;
const int CByyHead::kSubVerFieldNumber;
const int CByyHead::kMainCmdFieldNumber;
const int CByyHead::kSubCmdFieldNumber;
const int CByyHead::kSequenceFieldNumber;
const int CByyHead::kEncTypeFieldNumber;
const int CByyHead::kProTypeFieldNumber;
const int CByyHead::kFromUidFieldNumber;
const int CByyHead::kToUidFieldNumber;
const int CByyHead::kFlowIdFieldNumber;
const int CByyHead::kErrFieldNumber;
const int CByyHead::kResultFieldNumber;
const int CByyHead::kErrMsgFieldNumber;
#endif  // !_MSC_VER

CByyHead::CByyHead()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:byyhead.CByyHead)
}

void CByyHead::InitAsDefaultInstance() {
}

CByyHead::CByyHead(const CByyHead& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:byyhead.CByyHead)
}

void CByyHead::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  main_ver_ = 0u;
  sub_ver_ = 0u;
  main_cmd_ = 0u;
  sub_cmd_ = 0u;
  sequence_ = 0u;
  enc_type_ = 0u;
  pro_type_ = 0u;
  from_uid_ = 0u;
  to_uid_ = 0u;
  flow_id_ = 0u;
  err_ = 0;
  result_ = 0;
  err_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CByyHead::~CByyHead() {
  // @@protoc_insertion_point(destructor:byyhead.CByyHead)
  SharedDtor();
}

void CByyHead::SharedDtor() {
  if (err_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete err_msg_;
  }
  if (this != default_instance_) {
  }
}

void CByyHead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CByyHead::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CByyHead_descriptor_;
}

const CByyHead& CByyHead::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_byyhead_2eproto();
  return *default_instance_;
}

CByyHead* CByyHead::default_instance_ = NULL;

CByyHead* CByyHead::New() const {
  return new CByyHead;
}

void CByyHead::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CByyHead*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(main_ver_, from_uid_);
  }
  if (_has_bits_[8 / 32] & 7936) {
    ZR_(to_uid_, result_);
    if (has_err_msg()) {
      if (err_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        err_msg_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CByyHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:byyhead.CByyHead)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 main_ver = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &main_ver_)));
          set_has_main_ver();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_sub_ver;
        break;
      }

      // required uint32 sub_ver = 2;
      case 2: {
        if (tag == 16) {
         parse_sub_ver:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sub_ver_)));
          set_has_sub_ver();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_main_cmd;
        break;
      }

      // required uint32 main_cmd = 3;
      case 3: {
        if (tag == 24) {
         parse_main_cmd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &main_cmd_)));
          set_has_main_cmd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_sub_cmd;
        break;
      }

      // required uint32 sub_cmd = 4;
      case 4: {
        if (tag == 32) {
         parse_sub_cmd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sub_cmd_)));
          set_has_sub_cmd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_sequence;
        break;
      }

      // required uint32 sequence = 5;
      case 5: {
        if (tag == 40) {
         parse_sequence:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sequence_)));
          set_has_sequence();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_enc_type;
        break;
      }

      // required uint32 enc_type = 6;
      case 6: {
        if (tag == 48) {
         parse_enc_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &enc_type_)));
          set_has_enc_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_pro_type;
        break;
      }

      // required uint32 pro_type = 7;
      case 7: {
        if (tag == 56) {
         parse_pro_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pro_type_)));
          set_has_pro_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_from_uid;
        break;
      }

      // required uint32 from_uid = 8;
      case 8: {
        if (tag == 64) {
         parse_from_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &from_uid_)));
          set_has_from_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_to_uid;
        break;
      }

      // optional uint32 to_uid = 9;
      case 9: {
        if (tag == 72) {
         parse_to_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &to_uid_)));
          set_has_to_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_flow_id;
        break;
      }

      // optional uint32 flow_id = 10;
      case 10: {
        if (tag == 80) {
         parse_flow_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flow_id_)));
          set_has_flow_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_err;
        break;
      }

      // optional int32 err = 11;
      case 11: {
        if (tag == 88) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_result;
        break;
      }

      // optional int32 result = 12;
      case 12: {
        if (tag == 96) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_err_msg;
        break;
      }

      // optional string err_msg = 13;
      case 13: {
        if (tag == 106) {
         parse_err_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err_msg().data(), this->err_msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "err_msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:byyhead.CByyHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:byyhead.CByyHead)
  return false;
#undef DO_
}

void CByyHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:byyhead.CByyHead)
  // required uint32 main_ver = 1;
  if (has_main_ver()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->main_ver(), output);
  }

  // required uint32 sub_ver = 2;
  if (has_sub_ver()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sub_ver(), output);
  }

  // required uint32 main_cmd = 3;
  if (has_main_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->main_cmd(), output);
  }

  // required uint32 sub_cmd = 4;
  if (has_sub_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->sub_cmd(), output);
  }

  // required uint32 sequence = 5;
  if (has_sequence()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->sequence(), output);
  }

  // required uint32 enc_type = 6;
  if (has_enc_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->enc_type(), output);
  }

  // required uint32 pro_type = 7;
  if (has_pro_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->pro_type(), output);
  }

  // required uint32 from_uid = 8;
  if (has_from_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->from_uid(), output);
  }

  // optional uint32 to_uid = 9;
  if (has_to_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->to_uid(), output);
  }

  // optional uint32 flow_id = 10;
  if (has_flow_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->flow_id(), output);
  }

  // optional int32 err = 11;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->err(), output);
  }

  // optional int32 result = 12;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->result(), output);
  }

  // optional string err_msg = 13;
  if (has_err_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err_msg().data(), this->err_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "err_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->err_msg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:byyhead.CByyHead)
}

::google::protobuf::uint8* CByyHead::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:byyhead.CByyHead)
  // required uint32 main_ver = 1;
  if (has_main_ver()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->main_ver(), target);
  }

  // required uint32 sub_ver = 2;
  if (has_sub_ver()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sub_ver(), target);
  }

  // required uint32 main_cmd = 3;
  if (has_main_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->main_cmd(), target);
  }

  // required uint32 sub_cmd = 4;
  if (has_sub_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->sub_cmd(), target);
  }

  // required uint32 sequence = 5;
  if (has_sequence()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->sequence(), target);
  }

  // required uint32 enc_type = 6;
  if (has_enc_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->enc_type(), target);
  }

  // required uint32 pro_type = 7;
  if (has_pro_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->pro_type(), target);
  }

  // required uint32 from_uid = 8;
  if (has_from_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->from_uid(), target);
  }

  // optional uint32 to_uid = 9;
  if (has_to_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->to_uid(), target);
  }

  // optional uint32 flow_id = 10;
  if (has_flow_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->flow_id(), target);
  }

  // optional int32 err = 11;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->err(), target);
  }

  // optional int32 result = 12;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->result(), target);
  }

  // optional string err_msg = 13;
  if (has_err_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err_msg().data(), this->err_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "err_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->err_msg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:byyhead.CByyHead)
  return target;
}

int CByyHead::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 main_ver = 1;
    if (has_main_ver()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->main_ver());
    }

    // required uint32 sub_ver = 2;
    if (has_sub_ver()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sub_ver());
    }

    // required uint32 main_cmd = 3;
    if (has_main_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->main_cmd());
    }

    // required uint32 sub_cmd = 4;
    if (has_sub_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sub_cmd());
    }

    // required uint32 sequence = 5;
    if (has_sequence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sequence());
    }

    // required uint32 enc_type = 6;
    if (has_enc_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->enc_type());
    }

    // required uint32 pro_type = 7;
    if (has_pro_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pro_type());
    }

    // required uint32 from_uid = 8;
    if (has_from_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->from_uid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 to_uid = 9;
    if (has_to_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->to_uid());
    }

    // optional uint32 flow_id = 10;
    if (has_flow_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flow_id());
    }

    // optional int32 err = 11;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->err());
    }

    // optional int32 result = 12;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional string err_msg = 13;
    if (has_err_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err_msg());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CByyHead::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CByyHead* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CByyHead*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CByyHead::MergeFrom(const CByyHead& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_main_ver()) {
      set_main_ver(from.main_ver());
    }
    if (from.has_sub_ver()) {
      set_sub_ver(from.sub_ver());
    }
    if (from.has_main_cmd()) {
      set_main_cmd(from.main_cmd());
    }
    if (from.has_sub_cmd()) {
      set_sub_cmd(from.sub_cmd());
    }
    if (from.has_sequence()) {
      set_sequence(from.sequence());
    }
    if (from.has_enc_type()) {
      set_enc_type(from.enc_type());
    }
    if (from.has_pro_type()) {
      set_pro_type(from.pro_type());
    }
    if (from.has_from_uid()) {
      set_from_uid(from.from_uid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_to_uid()) {
      set_to_uid(from.to_uid());
    }
    if (from.has_flow_id()) {
      set_flow_id(from.flow_id());
    }
    if (from.has_err()) {
      set_err(from.err());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_err_msg()) {
      set_err_msg(from.err_msg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CByyHead::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CByyHead::CopyFrom(const CByyHead& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CByyHead::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void CByyHead::Swap(CByyHead* other) {
  if (other != this) {
    std::swap(main_ver_, other->main_ver_);
    std::swap(sub_ver_, other->sub_ver_);
    std::swap(main_cmd_, other->main_cmd_);
    std::swap(sub_cmd_, other->sub_cmd_);
    std::swap(sequence_, other->sequence_);
    std::swap(enc_type_, other->enc_type_);
    std::swap(pro_type_, other->pro_type_);
    std::swap(from_uid_, other->from_uid_);
    std::swap(to_uid_, other->to_uid_);
    std::swap(flow_id_, other->flow_id_);
    std::swap(err_, other->err_);
    std::swap(result_, other->result_);
    std::swap(err_msg_, other->err_msg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CByyHead::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CByyHead_descriptor_;
  metadata.reflection = CByyHead_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CByyBody::kDataFieldNumber;
#endif  // !_MSC_VER

CByyBody::CByyBody()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:byyhead.CByyBody)
}

void CByyBody::InitAsDefaultInstance() {
}

CByyBody::CByyBody(const CByyBody& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:byyhead.CByyBody)
}

void CByyBody::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CByyBody::~CByyBody() {
  // @@protoc_insertion_point(destructor:byyhead.CByyBody)
  SharedDtor();
}

void CByyBody::SharedDtor() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void CByyBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CByyBody::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CByyBody_descriptor_;
}

const CByyBody& CByyBody::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_byyhead_2eproto();
  return *default_instance_;
}

CByyBody* CByyBody::default_instance_ = NULL;

CByyBody* CByyBody::New() const {
  return new CByyBody;
}

void CByyBody::Clear() {
  if (has_data()) {
    if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      data_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CByyBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:byyhead.CByyBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:byyhead.CByyBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:byyhead.CByyBody)
  return false;
#undef DO_
}

void CByyBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:byyhead.CByyBody)
  // required bytes data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:byyhead.CByyBody)
}

::google::protobuf::uint8* CByyBody::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:byyhead.CByyBody)
  // required bytes data = 1;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:byyhead.CByyBody)
  return target;
}

int CByyBody::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CByyBody::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CByyBody* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CByyBody*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CByyBody::MergeFrom(const CByyBody& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CByyBody::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CByyBody::CopyFrom(const CByyBody& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CByyBody::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CByyBody::Swap(CByyBody* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CByyBody::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CByyBody_descriptor_;
  metadata.reflection = CByyBody_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace byyhead

// @@protoc_insertion_point(global_scope)
